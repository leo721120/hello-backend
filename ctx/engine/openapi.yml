openapi: 3.0.3

info:
  version: 1.0.0
  title: openapi for engine
  description: |
    Welcome to engine openapi document

    # Authentication

    None

servers:
  - url: http://localhost:8088
    description: |
      only for develop

tags:
  - name: Camera
    description: |
      abstraction of real camera
  - name: Person
    description: |
      abstraction of real person
  - name: Face
    description: |
      abstraction of real human face
  - name: ObjectDetection
    description: |
      abstraction of real object

paths:
  /metrics:
    get:
      summary: GetServerMetrics
      description: |

      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
                  - $ref: "#/components/schemas/ServerInfo"
              examples:
                OperationSuccess:
                  value: {}
                GenericError:
                  $ref: "#/components/examples/GenericError"

  /restart:
    get:
      summary: RestartServer
      description: |

      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
                  - $ref: "#/components/schemas/ServerInfo"
              examples:
                OperationSuccess:
                  value: {}
                GenericError:
                  $ref: "#/components/examples/GenericError"

  /version:
    get:
      summary: VersionInfo
      description: |

      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
                  - $ref: "#/components/schemas/ServerInfo"
              examples:
                OperationSuccess:
                  value:
                    {
                      rootPath: /app/ai-engine/,
                      product: { name: ai-engine, version: 1.0.1 },
                      engine: { name: ai-engine, version: 1.0.1 },
                    }
                MoreInformation:
                  value:
                    {
                      rootPath: /app/ai-engine/,
                      product: { name: ai-engine, version: 1.0.1 },
                      engine:
                        {
                          name: ai-engine,
                          version: 1.0.1,
                          info: { Customer: customer },
                        },
                    }
                GenericError:
                  $ref: "#/components/examples/GenericError"
      parameters:
        - in: query
          name: info
          description: |
            more information about engine
          schema:
            type: boolean

  /fr-api/camera:
    delete:
      summary: RemoveCamera
      description: |

      tags:
        - camera
      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
              examples:
                OperationSuccess:
                  value: {}
                GenericError:
                  $ref: "#/components/examples/GenericError"
                RequestIsInvalid:
                  $ref: "#/components/examples/RequestIsInvalid"
      parameters:
        - in: query
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/Camera/properties/id"
          example: iVNuxqLGvSJX2y4g

    post:
      summary: AddCamera
      description: |

      tags:
        - camera
      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
                  - minProperties: 1
                    maxProperties: 9
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        $ref: "#/components/schemas/Camera/properties/id"
              examples:
                OperationSuccess:
                  value: { id: iVNuxqLGvSJX2y4g }
                GenericError:
                  $ref: "#/components/examples/GenericError"
                RequestIsInvalid:
                  $ref: "#/components/examples/RequestIsInvalid"
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
                - type: object
                  required:
                    - name
                    - url
                    - maxFaceCount
                    - roi
                  properties:
                    id:
                      description: identity of camera, omit if auto generated
                - $ref: "#/components/schemas/Camera"
            example:
              {
                name: new camera 1,
                url: rtsp://192.168.1.10:554/camera1,
                maxFaceCount: 5,
                roi: [{ x: 0, y: 0, width: 100, height: 100 }],
              }

    get:
      summary: FindCamera
      description: |

      tags:
        - camera
      responses:
        default:
          description: |
            operation failed
        200:
          description: |
            operation success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCode"
                  - minProperties: 1
                    maxProperties: 9
                    type: object
                    required:
                      - camera
                    properties:
                      camera:
                        allOf:
                          - $ref: "#/components/schemas/Camera"
                          - type: object
                            required:
                              - _id
                            properties:
                              _id:
                                type: object
                                minProperties: 1
                                maxProperties: 9
                                required:
                                  - $oid
                                properties:
                                  $oid:
                                    $ref: "#/components/schemas/Camera/properties/id"
              examples:
                OperationSuccess:
                  value:
                    {
                      camera:
                        {
                          _id: { $oid: iVNuxqLGvSJX2y4g },
                          name: camera-name,
                          url: rtsp://192.168.1.10:554/camera1,
                        },
                    }
                GenericError:
                  $ref: "#/components/examples/GenericError"
                RequestIsInvalid:
                  $ref: "#/components/examples/RequestIsInvalid"
      parameters:
        - in: query
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/Camera/properties/id"
          example: iVNuxqLGvSJX2y4g

components:
  examples:
    GenericError:
      value: { status: -1, error: "" }
    RequestIsInvalid:
      value: { status: -2, error: "" }

  schemas:
    ErrorCode:
      maxProperties: 9
      minProperties: 1
      type: object
      properties:
        status:
          type: integer
          enum:
            - -1 # GenericError
            - -2 # RequestIsInvalid
            - -3 # ActivateLicenseFailed
            - -4 # SetCapacityFailed
            - -5 # RequestNotFoundInDb
            - -6 # WriteToDbFailed
            - -7 # StartStreamingFailed
            - -8 # StopStreamingFailed
            - -9 # RecognizeFailed
            - -10 # NoFaceInImage
            - -11 # MaskNotSupport
            - -12 # FaceTooSmall
            - -13 # FaceTooLarge
            - -14 # FaceNotInRegion
            - -15 # FacePoseOffAngle
            - -16 # FaceOverMaxCount
        error:
          type: string
          minLength: 1
          maxLength: 999

    ServerInfo:
      maxProperties: 9
      type: object
      required:
        - rootPath
        - product
        - engine
      properties:
        rootPath:
          type: string
          minLength: 1
          maxLength: 999
        product:
          maxProperties: 9
          type: object
          required:
            - name
            - version
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 99
            version:
              type: string
              minLength: 1
              maxLength: 99
        engine:
          maxProperties: 9
          type: object
          required:
            - name
            - version
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 99
            version:
              type: string
              minLength: 1
              maxLength: 99
            info:
              maxProperties: 99
              type: object

    Camera:
      maxProperties: 99
      minProperties: 1
      type: object
      properties:
        id:
          description: identity of camera
          type: string
          minLength: 1
          maxLength: 99
          example: iVNuxqLGvSJX2y4g
        name:
          description: name of camera
          type: string
          minLength: 0
          maxLength: 99
        url:
          type: string
          minLength: 0
          maxLength: 99
          example: rtsp://192.168.1.10:554/camera1
        iFrameOnly:
          type: boolean
          default: false
        captureInterval:
          description: interval between each capture, in milliseconds
          type: integer
          minimum: 500
          maximum: 60000
          default: 1000
        mergeThreshold:
          type: number
          minimum: 0.0
          maximum: 1.0
          default: 0.8
        mergeInterval:
          type: integer
          minimum: 0
          maximum: 15
          default: 5
        maxFaceCount:
          type: integer
          minimum: 0
          maximum: 999
        minFaceWidth:
          type: number
          minimum: 0.0
          maximum: 0.5
          default: 0.05
        maxFaceWidth:
          type: number
          minimum: 0.5
          maximum: 1.0
          default: 1.0
        roi:
          minItems: 0
          maxItems: 999
          type: array
          items:
            additionalProperties: false
            type: object
            properties:
              x:
                type: number
                minimum: -9999
                maximum: 9999
              y:
                type: number
                minimum: -9999
                maximum: 9999
              width:
                type: number
                minimum: 0
                maximum: 9999
              height:
                type: number
                minimum: 0
                maximum: 9999
        attribute:
          type: boolean
          default: false
