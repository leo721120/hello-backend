openapi: 3.0.3

info:
  version: 1.0.0
  title: example backend
  description: |
    Welcome to the reference for the example backend API.

    # Authentication

    There is no authentication mechanism for this service.

    # HTTP method Verbs

    - The GET method requests a representation of the specified resource. Requests using GET should only retrieve data.
    - The PUT method replaces all current representations of the target resource with the request payload.
    - The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server.
    - The PATCH method applies partial modifications to a resource.
    - The DELETE method deletes the specified resource.

    # Error

    The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be `RFC 7807` in the following format

    ```js
    {
      "title": "SyntaxError",
      "detail": "The request parameter has incorrect format.",
      "instance": "/streams/{id}",
      "status": 400,
    }
    ```

tags:
  - name: System
  - name: Event
    description: |
      Used to describe the events that the system will send.

servers:
  - url: http://{hostname}:{port}
    description: |
      for develop
    variables:
      hostname:
        description: |
          hostname to server
        default: localhost
      port:
        description: |
          port to listen
        default: "8088"
  
  - url: http://{hostname}:{port}/v1.0/invoke/{appid}/method
    description: |
      over dapr
    variables:
      hostname:
        description: |
          hostname to server
        default: localhost
      port:
        description: |
          port to listen
        default: "8088"
      appid:
        description: |
          name of application
        default: devapp

security: []

paths:
  /versions:
    get:
      summary: ListVersions
      description: |
        Can be used to view system version information.
      tags:
        - System
      responses:
        default:
          description: |
            Operation failed.
        200:
          description: |
            Operation success.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/versions"

  /events:
    post:
      summary: NotifyEvent
      description: |
        Used to notify the system that an event has occurred.
      tags:
        - System
      requestBody:
        required: true
        content:
          application/cloudevents+json:
            schema:
              allOf:
                - $ref: "#/components/schemas/cloudevent"
      responses:
        default:
          description: |
            Operation failed.
        200:
          description: |
            Operation success.
          content:
            application/json:
              example: { status: "SUCCESS" }
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - SUCCESS

  /token:
    get:
      summary: IssueToken
      description: |
        Used to issue a token for the system.
      tags:
        - System
      responses:
        default:
          description: |
            Operation failed.
        401:
          description: |
            User cannot be identified.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/error"
        400:
          description: |
            Invalid request.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/error"
        200:
          description: |
            Operation success.
          content:
            application/json:
              schema:
                description: |
                  
                type: object
                maxProperties: 9
                required:
                  - access_token
                  - token_type
                properties:
                  access_token:
                    description: |
                      The access token issued by the authorization server.
                    type: string
                    minLength: 9
                    maxLength: 9999
                    example: eyJz93a...k4laUWw
                  token_type:
                    description: |
                      The type of the token issued as described in [RFC6749], Section 7.1. Value is case insensitive.
                    type: string
                    enum:
                      - bearer
                      - jwt
                  expires_in:
                    description: |
                      The lifetime in seconds of the access token. For example, the value "3600" denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value.
                    type: integer
                    minimum: 1
                    maximum: 3600
                    default: 300
                    example: 300
      parameters:
        - name: Authorization
          in: header
          description: |
            https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 999
            example: basic YTpi
            pattern: "^(basic) [a-zA-Z0-9+/=]+$"

x-webhooks:
  SomethingHappened:
    post:
      summary: SomethingHappened
      description: |
        Used to notify the system that an event has occurred.
      tags:
        - Event
      requestBody:
        content:
          application/cloudevents+json:
            schema:
              allOf:
                - $ref: "#/components/schemas/cloudevent"

components:
  schemas:
    error:
      maxProperties: 9
      type: object
      description: |
        Used to describe problem details by RFC 7807.
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be "about:blank".
          type: string
          format: uri
          example: https://example.com/probs/out-of-credit
        title:
          description: |
            A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
          type: string
          example: Out of credit
        status:
          description: |
            The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          type: integer
          format: int32
          example: 400
        detail:
          description: |
            A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50.
        instance:
          description: |
            A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
          type: string
          minLength: 1
          maxLength: 999
          example: /account/12345/msgs/abc

    cloudevent:
      # https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/formats/cloudevents.json
      maxProperties: 99
      type: object
      description: |
        CloudEvents Specification JSON Schema
      required:
        - source
        - time
        - type
        - id
      properties:
        id:
          description: |
            Identifies the event.
          type: string
          minLength: 1
          example: 00-0af7651916cd43dd8448eb211c80319c-b7ad6b7169203331-01
        type:
          description: |
            Describes the type of event related to the originating occurrence.
          type: string
          minLength: 1
          example: someone.something.happen
        time:
          description: |
            Timestamp of when the occurrence happened. Must adhere to RFC 3339.
          type: string
          format: date-time
          minLength: 1
          example: "2022-11-25T14:06:53Z"
        source:
          description: |
            Identifies the context in which an event happened.
          type: string
          minLength: 1
          example: /<some-project>/<some-service>
        specversion:
          description: |
            The version of the CloudEvents specification which the event uses.
          type: string
          default: "1.0"
        datacontenttype:
          description: |
            Content type of the data value. Must adhere to RFC 2046 format.
          type: string
          default: application/json
        data:
          description: |
            The event payload.

    versions:
      maxProperties: 9
      type: object
      description: |
        Used to describe the versions of this service and various information about the system.
      properties:
        backend:
          description: |
            Version of this service.
          type: string
          minLength: 1
          maxLength: 99
          example: 1.0.3-beta
        platform:
          description: |
            A string identifying the operating system platform.
          type: string
          minLength: 1
          maxLength: 99
          example: win32
        os:
          description: |
            A string identifying the operating system.
          type: string
          minLength: 1
          maxLength: 99
          example: Windows 10 Enterprise
